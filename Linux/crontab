###### Commands #########
crontab -e	Edit or create a crontab file if doesnâ€™t already exist.
crontab -l	Display the crontab file.
crontab -r	Remove the crontab file.
crontab -v	Display the last time you edited your crontab file.


###########  Regular use ##################

*/15 * * * *	    Every 15 mins
0 * * * *	        Every hour
0 */2 * * *	        Every 2 hours
15 2 * * *	        At 2:15AM of every day
15 2 * * ?	        At 2:15AM of every day
10 9 * * 5	        At 9:10AM of every Friday
0 0 * * 0	        At midnight of every Sunday
15 2 * * 1L	        At 2:15am on the last monday of every month
15 0 * * 4#2    	At 00:15am on the second thursday of every month
0 0 1 * *	        Every 1st of month (monthly)
0 0 1 1 *	        Every 1st of january (yearly)
@reboot	            Every reboot


######## Inbuilt strings ##############

@reboot         	Run once, at system startup 
@yearly         	Run once every year, "0 0 1 1 *" 
@annually       	(same as @yearly) 
@monthly        	Run once every month, "0 0 1 * *" 
@weekly         	Run once every week, "0 0 * * 0" 
@daily	            Run once each day, "0 0 * * *" 
@midnight       	(same as @daily) 
@hourly	            Run once an hour, "0 * * * *" 








###########################3# Cron

## Format

Each entry in a crontab file has 6 fields,

Min  Hour  Day  Mon  Weekday
*    *     *    *    *        <command>

-    -     -    -    -
|    |     |    |    |__ Weekday (0=Sun .. 6=Sat)
|    |     |    |_______ Month (1 .. 12)
|    |     |____________ Day (1 .. 31)
|    |__________________ Hour (0 .. 23)
|_______________________ Minute (0 .. 59)

# Special Characters

Asterix
The asterix is a wild card character.

```bash
* * * * * /home/admin/scripts/delete.sh
```

Comma
The comma is used when creating a list when declaring 2 or more execution times

```bash
0,15,25 * * * * /home/admin/scripts/delete.sh
```

Hyphen
The hyphen is used to specify the range of time in which scripts can run.

```bash
0-59 0-23 * * * /home/admin/scripts/delete.sh
```

Forward slash
The forward slash is used to create specified intervals of time within a range

```bash
*/10 * * * * /home/admin/scripts/delete.sh
```

## Examples

0 * * * *       every hour

*/15 * * * *    every 15 mins

0 */2 * * *     every 2 hours

0 0 " " "       every Sunday midnight

@reboot         every reboot

## Crontab

```bash
# 
echo "@reboot echo hi" | crontab
```

```bash
# Edit your crontab file
crontab -e
```

```bash
# Display your crontab file
crontab -l 
```

```bash
# Diplay the last time you edited your crontab file
crontab -v
```

## Limiting access
